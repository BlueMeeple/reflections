When would you want to use a remote repository rather than keeping all your work
local?

    When collaborating with others, or when you want free backup of your repo.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You don't want to be surprised by a change to your local repo, especially
    if such a pull would force you to resolve a merge conflict.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A clone is simply a copy of another repo, although once cloned two repos
    can diverge.  Clones are useful when you intend for 2 repos to stay in sync.

    A branch is a conceptually different line of work.  Branches are useful when
    you want to work on a project with its own commit sequence, e.g. you want
    to develop a new feature outside of the commit stream of the master branch.

    A fork is linked branch that is unique to GitHub.  Forks are useful when the
    original author wishes to allow others to expand on their code, but want to
    keep the original repo read-only.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to preview remote changes before deciding when to merge.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without any source control system, collaboration would be difficult.
    Files would have to be shared either over a network files system (e.g. NFS)
    or by sending copies back and forth.  Participants would either have to
    agree on exclusive editing privileges when editing, or perform manual
    merges.
    While collaboration itself would be harder, working locally would be
    slightly easier (no need to manually commit, etc.).

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
